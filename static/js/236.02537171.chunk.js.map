{"version":3,"file":"static/js/236.02537171.chunk.js","mappings":"6SASMA,GAAO,IAAIC,MAAOC,cAEXC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA4BC,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KAEA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eAEMC,EAAY,mCAAG,WAAMC,GAAN,kFACnBA,EAAEC,iBAEIC,EAAQF,EAAEG,cAAcC,SAASF,MAAMG,MACvCC,EAAON,EAAEG,cAAcC,SAASE,KAAKD,MACrCE,EAAWP,EAAEG,cAAcC,SAASG,SAASF,MALhC,kBAQXP,EAAa,CAAEQ,KAAAA,EAAMJ,MAAAA,EAAOK,SAAAA,IAAYC,MAAK,SAAAC,GACjDC,QAAQC,IAAIF,GACZjB,GAASoB,EAAAA,EAAAA,IAASH,EAAKI,QACvBrB,GAASsB,EAAAA,EAAAA,KAAY,GAGtB,IAdgB,+DAiBnBC,IAAAA,OAAAA,QAAA,wBAAyCT,IACzCN,EAAEG,cAAca,QAlBG,yDAAH,sDAqBlB,OACE,+BACE,kBAAMC,OAAO,IAAIC,MAAO,CAAEC,MAAO,SAAWC,SAAUrB,EAAtD,WACE,4CAEA,4BACE,kBAAOsB,GAAG,QAAQf,KAAK,QAAQgB,KAAK,QAAQC,aAAa,cACzD,kBAAOC,QAAQ,QAAf,+BAGF,4BACE,kBAAOH,GAAG,OAAOf,KAAK,OAAOgB,KAAK,OAAOC,aAAa,SACtD,kBAAOC,QAAQ,OAAf,sBAGF,4BACE,kBACEH,GAAG,WACHf,KAAK,WACLgB,KAAM3B,EAAS,WAAa,OAC5B4B,aAAa,sBAEf,kBAAOC,QAAQ,WAAf,0BAGF,mBAAQF,KAAK,SAASG,QAAS,kBAAM7B,GAAU,SAAA8B,GAAI,OAAKA,CAAL,GAApB,EAA/B,qBAIA,SAAC,KAAD,CAAMC,GAAG,SAAT,mCAEA,mBAAQL,KAAK,SAAb,sBACA,iCAAMlC,SAIb,EC9DD,EATiB,WACf,OACE,4BACE,6CACA,SAACG,EAAD,MAGL,C,uBCXD,SAASqC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChB9B,EAAQ+B,EAAK/B,KAInB,CAHE,MAAOgC,GAEP,YADAN,EAAOM,EAET,CAEID,EAAKE,KACPR,EAAQzB,GAERkC,QAAQT,QAAQzB,GAAOG,KAAKwB,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAM3B,GACbuB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQ5B,EAClE,CAEA,SAAS4B,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useState } from 'react';\n\nimport { useRegistarationMutation } from 'redux/auth/authApi';\n\nimport { Link } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { setToken, setLoggedIn } from '../../redux/auth/auth.slice';\nimport { useDispatch } from 'react-redux';\n\nconst year = new Date().getFullYear();\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const [isPass, setIsPass] = useState(true);\n\n  const [registration] = useRegistarationMutation();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const email = e.currentTarget.elements.email.value;\n    const name = e.currentTarget.elements.name.value;\n    const password = e.currentTarget.elements.password.value;\n\n    try {\n      await registration({ name, email, password }).then(data => {\n        console.log(data);\n        dispatch(setToken(data.token));\n        dispatch(setLoggedIn(true));\n\n        // dispatch(setUser(data.user.name));\n      });\n    } catch (error) {}\n\n    Notiflix.Notify.success(`Added contact ${name}`);\n    e.currentTarget.reset();\n  };\n\n  return (\n    <>\n      <form action=\"#\" style={{ width: '450px' }} onSubmit={handleSubmit}>\n        <h1>Please Sign In</h1>\n\n        <div>\n          <input id=\"email\" name=\"email\" type=\"email\" autoComplete=\"username\" />\n          <label htmlFor=\"email\">Email address</label>\n        </div>\n\n        <div>\n          <input id=\"name\" name=\"name\" type=\"name\" autoComplete=\"off\" />\n          <label htmlFor=\"name\">Name</label>\n        </div>\n\n        <div>\n          <input\n            id=\"password\"\n            name=\"password\"\n            type={isPass ? 'password' : 'text'}\n            autoComplete=\"current-password\"\n          />\n          <label htmlFor=\"password\">Password</label>\n        </div>\n\n        <button type=\"button\" onClick={() => setIsPass(prev => !prev)}>\n          toggle\n        </button>\n\n        <Link to=\"/login\">Already has account?</Link>\n\n        <button type=\"submit\">Sign In</button>\n        <p>Â© {year}</p>\n      </form>\n    </>\n  );\n};\n","// import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n      <title>Registration</title>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["year","Date","getFullYear","RegisterForm","dispatch","useDispatch","useState","isPass","setIsPass","useRegistarationMutation","registration","handleSubmit","e","preventDefault","email","currentTarget","elements","value","name","password","then","data","console","log","setToken","token","setLoggedIn","Notiflix","reset","action","style","width","onSubmit","id","type","autoComplete","htmlFor","onClick","prev","to","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}