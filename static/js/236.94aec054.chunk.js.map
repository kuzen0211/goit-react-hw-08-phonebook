{"version":3,"file":"static/js/236.94aec054.chunk.js","mappings":"uTASMA,GAAO,IAAIC,MAAOC,cAEXC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,GAA4BC,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KAEA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACA,GAAgBC,EAAAA,EAAAA,MAATC,GAAP,eAEMC,EAAY,mCAAG,WAAMC,GAAN,kFACnBA,EAAEC,iBAEIC,EAAQF,EAAEG,cAAcC,SAASF,MAAMG,MACvCC,EAAON,EAAEG,cAAcC,SAASE,KAAKD,MACrCE,EAAWP,EAAEG,cAAcC,SAASG,SAASF,MALhC,kBAQXT,EAAa,CAAEU,KAAAA,EAAMJ,MAAAA,EAAOK,SAAAA,IAAYC,MAAK,SAAAC,GACjDC,QAAQC,IAAIF,GACZrB,GAASwB,EAAAA,EAAAA,IAASH,EAAKI,QAAQC,EAAAA,EAAAA,KAAY,IAAOC,EAAAA,EAAAA,IAAQN,EAAKO,OAE/DC,IAAAA,OAAAA,QAAA,wBAAyCX,IACzCN,EAAEG,cAAce,OAEjB,IAfgB,0FAmBXpB,EAAM,CAAEI,MAAAA,EAAOK,SAAAA,IAAYC,MAAK,SAAAC,GACpCrB,GAASwB,EAAAA,EAAAA,IAASH,EAAKA,KAAKI,QAC5BzB,GAAS0B,EAAAA,EAAAA,KAAY,IACrB1B,GAAS2B,EAAAA,EAAAA,IAAQN,EAAKA,KAAKO,KAAKV,MACjC,IAvBgB,QAyBjBW,IAAAA,OAAAA,QAAwB,8CACxB3B,EAAS,YAAa,CAAE6B,SAAS,IA1BhB,oHAAH,sDA8BlB,OACE,+BACE,kBAAMC,OAAO,IAAIC,MAAO,CAAEC,MAAO,SAAWC,SAAUxB,EAAtD,WACE,4CAEA,4BACE,kBAAOyB,GAAG,QAAQlB,KAAK,QAAQmB,KAAK,QAAQC,aAAa,cACzD,kBAAOC,QAAQ,QAAf,+BAGF,4BACE,kBAAOH,GAAG,OAAOlB,KAAK,OAAOmB,KAAK,OAAOC,aAAa,SACtD,kBAAOC,QAAQ,OAAf,sBAGF,4BACE,kBACEH,GAAG,WACHlB,KAAK,WACLmB,KAAMhC,EAAS,WAAa,OAC5BiC,aAAa,sBAEf,kBAAOC,QAAQ,WAAf,0BAGF,mBAAQF,KAAK,SAASG,QAAS,kBAAMlC,GAAU,SAAAmC,GAAI,OAAKA,CAAL,GAApB,EAA/B,qBAIA,SAAC,KAAD,CAAMC,GAAG,SAAT,mCAEA,mBAAQL,KAAK,SAAb,sBACA,iCAAMzC,SAIb,ECzED,EATiB,WACf,OACE,4BACE,6CACA,SAACG,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { useState } from 'react';\n\nimport { useRegistarationMutation, useLoginMutation } from 'redux/auth/authApi';\n\nimport { Link, useNavigate } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { setToken, setLoggedIn, setUser } from '../../redux/auth/auth.slice';\nimport { useDispatch } from 'react-redux';\n\nconst year = new Date().getFullYear();\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [isPass, setIsPass] = useState(true);\n\n  const [registration] = useRegistarationMutation();\n  const [login] = useLoginMutation();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const email = e.currentTarget.elements.email.value;\n    const name = e.currentTarget.elements.name.value;\n    const password = e.currentTarget.elements.password.value;\n\n    try {\n      await registration({ name, email, password }).then(data => {\n        console.log(data);\n        dispatch(setToken(data.token), setLoggedIn(true), setUser(data.user));\n\n        Notiflix.Notify.success(`Added contact ${name}`);\n        e.currentTarget.reset();\n        // dispatch(setUser(data.user.name));\n      });\n    } catch (error) {}\n\n    try {\n      await login({ email, password }).then(data => {\n        dispatch(setToken(data.data.token)); // Збереження токена в Redux Store\n        dispatch(setLoggedIn(true)); // Позначення користувача як залогіненого\n        dispatch(setUser(data.data.user.name));\n      });\n\n      Notiflix.Notify.success('Увійшов');\n      navigate('/contacts', { replace: true });\n    } catch (error) {}\n  };\n\n  return (\n    <>\n      <form action=\"#\" style={{ width: '450px' }} onSubmit={handleSubmit}>\n        <h1>Please Sign In</h1>\n\n        <div>\n          <input id=\"email\" name=\"email\" type=\"email\" autoComplete=\"username\" />\n          <label htmlFor=\"email\">Email address</label>\n        </div>\n\n        <div>\n          <input id=\"name\" name=\"name\" type=\"name\" autoComplete=\"off\" />\n          <label htmlFor=\"name\">Name</label>\n        </div>\n\n        <div>\n          <input\n            id=\"password\"\n            name=\"password\"\n            type={isPass ? 'password' : 'text'}\n            autoComplete=\"current-password\"\n          />\n          <label htmlFor=\"password\">Password</label>\n        </div>\n\n        <button type=\"button\" onClick={() => setIsPass(prev => !prev)}>\n          toggle\n        </button>\n\n        <Link to=\"/login\">Already has account?</Link>\n\n        <button type=\"submit\">Sign In</button>\n        <p>© {year}</p>\n      </form>\n    </>\n  );\n};\n","// import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n      <title>Registration</title>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["year","Date","getFullYear","RegisterForm","dispatch","useDispatch","navigate","useNavigate","useState","isPass","setIsPass","useRegistarationMutation","registration","useLoginMutation","login","handleSubmit","e","preventDefault","email","currentTarget","elements","value","name","password","then","data","console","log","setToken","token","setLoggedIn","setUser","user","Notiflix","reset","replace","action","style","width","onSubmit","id","type","autoComplete","htmlFor","onClick","prev","to"],"sourceRoot":""}