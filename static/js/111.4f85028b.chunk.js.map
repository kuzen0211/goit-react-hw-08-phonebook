{"version":3,"file":"static/js/111.4f85028b.chunk.js","mappings":"yRAOaA,EAAY,WACvB,OAAgBC,EAAAA,EAAAA,MAATC,GAAP,eAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAMC,GAAN,gFACnBA,EAAEC,iBAEIC,EAAQF,EAAEG,cAAcC,SAASF,MAAMG,MACvCC,EAAWN,EAAEG,cAAcC,SAASE,SAASD,MAJhC,kBAOXT,EAAM,CAAEM,MAAAA,EAAOI,SAAAA,IAAYC,MAAK,SAAAC,GACpCX,GAASY,EAAAA,EAAAA,IAASD,EAAKA,KAAKE,QAC5Bb,GAASc,EAAAA,EAAAA,KAAY,IACrBd,GAASe,EAAAA,EAAAA,IAAQJ,EAAKA,KAAKK,KAAKC,MACjC,IAXgB,OAajBC,IAAAA,OAAAA,QAAwB,8CAbP,yGAAH,sDAiBlB,OACE,+BACE,kBAAMC,MAAO,CAAEC,MAAO,SAAWC,SAAUnB,EAA3C,WACE,eAAIoB,UAAU,oBAAd,yBAEA,iBAAKA,UAAU,qBAAf,WACE,kBAAOC,KAAK,OAAOC,GAAG,QAAQP,KAAK,WACnC,kBAAOQ,QAAQ,QAAf,+BAGF,iBAAKH,UAAU,qBAAf,WACE,kBAAOE,GAAG,WAAWD,KAAK,WAAWN,KAAK,cAC1C,kBAAOQ,QAAQ,WAAf,0BAGF,mBAAQF,KAAK,SAAb,wBAIP,ECrCD,EATc,WACZ,OACE,4BACE,sCACA,SAAC1B,EAAD,MAGL,C,uBCTD,SAAS6B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBzB,EAAQ0B,EAAK1B,KAInB,CAHE,MAAO2B,GAEP,YADAN,EAAOM,EAET,CAEID,EAAKE,KACPR,EAAQpB,GAER6B,QAAQT,QAAQpB,GAAOE,KAAKoB,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMtB,GACbkB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQvB,EAClE,CAEA,SAASuB,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { useDispatch } from 'react-redux';\n\nimport { useLoginMutation } from 'redux/auth/authApi';\n\nimport { setToken, setLoggedIn, setUser } from '../../redux/auth/auth.slice';\n\nexport const LoginForm = () => {\n  const [login] = useLoginMutation();\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const email = e.currentTarget.elements.email.value;\n    const password = e.currentTarget.elements.password.value;\n\n    try {\n      await login({ email, password }).then(data => {\n        dispatch(setToken(data.data.token)); // Збереження токена в Redux Store\n        dispatch(setLoggedIn(true)); // Позначення користувача як залогіненого\n        dispatch(setUser(data.data.user.name));\n      });\n\n      Notiflix.Notify.success('Увійшов');\n    } catch (error) {}\n  };\n\n  return (\n    <>\n      <form style={{ width: '450px' }} onSubmit={handleSubmit}>\n        <h1 className=\"h3 mb-3 fw-normal\">Login page</h1>\n\n        <div className=\"form-floating my-4\">\n          <input type=\"text\" id=\"email\" name=\"email\" />\n          <label htmlFor=\"email\">Email address</label>\n        </div>\n\n        <div className=\"form-floating my-4\">\n          <input id=\"password\" type=\"password\" name=\"password\" />\n          <label htmlFor=\"password\">Password</label>\n        </div>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <div>\n      <title>Login</title>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["LoginForm","useLoginMutation","login","dispatch","useDispatch","handleSubmit","e","preventDefault","email","currentTarget","elements","value","password","then","data","setToken","token","setLoggedIn","setUser","user","name","Notiflix","style","width","onSubmit","className","type","id","htmlFor","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}